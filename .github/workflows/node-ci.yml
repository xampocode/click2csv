# Node.js CI/CD Workflow Template
# Copy this file to each project's .github/workflows/ directory

name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev, production ]
  pull_request:
    branches: [ main, production ]

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/production'

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm ci
    - run: npm run build --if-present
    - run: npm test --if-present
    - run: npm run lint --if-present

  deploy-staging:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4
    - name: Deploy to staging
      run: |
        echo "ðŸš€ Deploying to staging environment"
        # Add your staging deployment commands here

  deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - run: npm ci
    - run: npm run build --if-present
    - run: npm test --if-present

    - name: Deploy to production
      run: |
        echo "ðŸš€ Deploying to production environment"
        # Add your production deployment commands here

  security-audit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - run: npm audit --audit-level high
    - run: npm audit fix --dry-run